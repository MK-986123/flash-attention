name: Build and Test Windows CUDA

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: windows-latest # Use windows-latest OS

    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\AppData\Local\pip\Cache
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-
            ${{ runner.os }}-pip-

      - name: Install CUDA Toolkit
        run: |
          choco install cuda --version=12.8
          & "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\bin\nvcc.exe" --version; if ($LASTEXITCODE -ne 0) { exit 1 }
        shell: powershell

      - name: Install dependencies including build tool
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m pip install torch==2.7.0+cu128 --index-url https://download.pytorch.org/whl/cu128
          python -m pip install torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128
          python -m pip install pytest pytest-xdist
        shell: powershell

      - name: Build wheel
        run: |
          python -m build --wheel --no-isolation
          if (!(Test-Path -Path dist\*.whl)) {
              Write-Error "Wheel build failed: No wheel file found in dist directory."
              exit 1
          }
        shell: powershell

      - name: Verify Wheel
        run: python -m pip install dist/*.whl
        shell: powershell

      - name: Run tests
        run: pytest -n auto
        shell: powershell

      - name: Show Logs on Failure
        if: failure()
        run: dir dist\*.log
        shell: powershell

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-wheel-${{ matrix.python-version }}-${{ runner.os }}
          path: dist/*.whl
