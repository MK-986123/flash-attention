name: Build and Test Windows CUDA

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: windows-latest # Use windows-latest OS

    strategy:
      matrix:
        python-version: ['3.12'] # Use Python 3.12

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies including build tool
        # Install torch first, then let pip find compatible torchvision/torchaudio
        # Note: Assumes torch 2.7.0 with CUDA 12.8 exists with '+cu128' suffix
        run: |
          python -m pip install --upgrade pip
          pip install build # Added build tool
          pip install torch==2.7.0+cu128 --index-url https://download.pytorch.org/whl/cu128
          # Install torchvision and torchaudio without version specifiers from the same index
          pip install torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128
          pip install -r requirements.txt
        shell: bash

      - name: Build wheel
        run: python -m build --wheel # Added step to build the wheel
        shell: bash

      - name: Install package for testing
        run: python setup.py install # Kept install step for testing context
        shell: bash

      - name: Run tests
        run: pytest # Kept test step
        shell: bash

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4 # Added step to upload the built wheel
        with:
          name: python-wheel-${{ matrix.python-version }}-${{ runner.os }}
          path: dist/*.whl # Uploads the wheel file(s) from the dist directory
